---
# defaults file for ansible-pitft

# ATTENTION!
# Following instructions for some reason does not work on Mac
#
# Generate a new hash using the following:
# Python2.7:
#     echo 'import crypt,getpass; print crypt.crypt(getpass.getpass(), "$6$16CHARACTER_SALT")' | python -
#   For in-script usage (Non-interactive Mode without prompt):
#     python -c 'import crypt; print crypt.crypt("P@$$w0rd", "$6$16_CHARACTER_SALT_HERE")'
#
# Python3:
#     echo 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))' | python3 -
#   For in-script usage (Non-interactive Mode without prompt):
#     python3 -c 'import crypt; print(crypt.crypt("P@$$w0rd", crypt.mksalt(crypt.METHOD_SHA512)))'
#
# Alternatively, we could keep passwords in vault in plain text,
# and use {{ 'password'|password_hash('sha512') }} filter to get SHA512 hash with random salt
# But storing hashes even in encrypted vault adds additional security
# See https://ansible-docs.readthedocs.io/zh/stable-2.0/rst/playbooks_filters.html
#
# SHA512 salted password hash for pi user, to be used for autologin (P@$$w0rd)
pitft_pi_passwd:
   $6$LM55QAj0WKNtA58y$LwoFqpktx9GfaZSfRI6Oo3ix4b/gc/mLtAbjh9UTH70ZAXy5P1LSlx3x3oiIeeWtdgEI8CxhlC.IQP9TNt3dr0

pitft_chronometer: no  # Create .bash_profile with 'pihole -c' command for running chronometer on login

# Select display model to be configured:
# 1 - PiTFT 2.4", 2.8" or 3.2" resistive (240x320)
# 2 - PiTFT 2.2" no touch (240x320)
# 3 - PiTFT 2.8" capacitive touch (240x320)
# 4 - PiTFT 3.5" resistive touch (320x480)
pitft_display_model: 3  # PiTFT 2.8" capacitive touch (240x320)

#Select rotation:
# 1 - 90 degrees (landscape)
# 2 - 180 degrees (portait)
# 3 - 270 degrees (landscape)
# 4 - 0 degrees (portait)
pitft_display_rotation: 3 # 270 degrees (landscape)

# Would you like the console to appear on the PiTFT display? [y/n]
pitft_console: Y
